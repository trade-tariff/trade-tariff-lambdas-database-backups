name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-2
  IAM_ROLE_ARN:  arn:aws:iam::382373577178:role/GithubActions-Serverless-Lambda-Role
  ECR_URL: 382373577178.dkr.ecr.eu-west-2.amazonaws.com/tariff-database-backups-production

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - id: docker-tag
        run: echo "DOCKER_TAG=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - uses: trade-tariff/trade-tariff-tools/.github/actions/build-and-push@main
        with:
          ecr-url: ${{ env.ECR_URL }}
          ref: ${{ steps.docker-tag.outputs.DOCKER_TAG }}
          role-to-assume: ${{ env.IAM_ROLE_ARN }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - id: docker-tag
        run: echo "DOCKER_TAG=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - uses: trade-tariff/trade-tariff-tools/.github/actions/tag-production@main
        with:
          ecr-url: ${{ env.ECR_URL }}
          ref: ${{ steps.docker-tag.outputs.DOCKER_TAG }}

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.IAM_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'yarn'

      - run: yarn install --frozen-lockfile

      - run: yarn run serverless deploy --verbose
        env:
          DOCKER_TAG: ${{ steps.docker-tag.outputs.DOCKER_TAG }}
          STAGE: production
